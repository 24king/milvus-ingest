import pandas
import json


def dataframe_columns():
    # 表示集合
    df = pandas.DataFrame(columns={"count", "random_value", "float_vector"})
    df1 = pandas.DataFrame([jmsg], columns={"count", "random_value", "float_vector"})
    df = df.append(df1, ignore_index=True)
    df = df.append(df1, ignore_index=True)
    df = df.append(df1, ignore_index=True)
    df = df.append(df1, ignore_index=True)
    print(df)
    df.drop(df.index, inplace=True)
    print(df)

def dataframe_columns1():
    # 表示列表
    df = pandas.DataFrame(columns=["count", "random_value", "float_vector"])
    df1 = pandas.DataFrame([jmsg], columns=["count", "random_value", "float_vector"])
    df = df.append(df1, ignore_index=True, sort=True)
    df = df.append(df1, ignore_index=True, sort=True)
    df = df.append(df1, ignore_index=True, sort=True)
    df = df.append(df1, ignore_index=True, sort=True)
    print(df)
    df.drop(df.index, inplace=True)
    print(df)


if __name__ == '__main__':
    msg = '[0, [-18.0], [[0.5610832938140721, 0.6730858807927368, 0.49757520479268225, 0.23658008175741385, 0.6993229461115567, 0.2109699151435015, 0.3969038778469265, 0.500838527636047, 0.9457803464503965, 0.8498963489773608, 0.6822578863958504, 0.8170804376801013, 0.07717701874459204, 0.22608954503554934, 0.04117546871632416, 0.38309121215524056, 0.6925832160748076, 0.41436486523497906, 0.08052675930117692, 0.026333662487285636, 0.24634926976761562, 0.14339790533967234, 0.8600491093342729, 0.3872999404807339, 0.25579500687895274, 0.5812579498696543, 0.22875720085793638, 0.2944123353070165, 0.8849003605717823, 0.9297461411191926, 0.33439189943400827, 0.9303226031609977, 0.314080408104493, 0.25688366497670834, 0.7213805978392105, 0.5888459855835436, 0.10452938042168425, 0.7311156783069994, 0.9287100975554246, 0.7562852696854451, 0.03212879041735861, 0.6733551593644967, 0.8102499885035374, 0.8612371011535453, 0.96443474904644, 0.6330960940038849, 0.4462057563345442, 0.624056068413434, 0.2698555003358589, 0.7132437009877591, 0.21277012132264672, 0.6255086938424157, 0.16131885822290148, 0.7867237815685639, 0.35873730617947086, 0.37768897735403884, 0.9230414172722603, 0.29232929694675513, 0.32569218994500027, 0.14702608761032065, 0.18577743897082966, 0.5852184718113848, 0.4735305870877088, 0.7680503336027172, 0.8857935169369847, 0.04101734745713448, 0.6194891586100102, 0.24926775895176356, 0.20252860604145484, 0.35880986932760406, 0.817457212496251, 0.5643335461431197, 0.3148404097680617, 0.8279221271554267, 0.4026710439129293, 0.5158810902545186, 0.18377681929684508, 0.5183507700475164, 0.002343324162804694, 0.5189550794425407, 0.2631827600815019, 0.8470176750277816, 0.6246995766705419, 0.9691534111352916, 0.7439607385985046, 0.8711299341043988, 0.884860841649488, 0.1852814590127867, 0.2761054886797961, 0.45250254337853313, 0.6105362113269261, 0.573798385235116, 0.06711066964611245, 0.551638295013209, 0.4528256883776719, 0.3637737232609922, 0.48232613692503223, 0.8426610894511032, 0.7738385387063295, 0.5185450812460237, 0.8624709570085282, 0.5481621413453468, 0.9383242691288045, 0.5107089185078706, 0.6934283973831226, 0.7160855178011974, 0.7663417923656493, 0.12544760096147256, 0.6870757508211194, 0.787209297030384, 0.25564400995714653, 0.2944909594872005, 0.12240274242448457, 0.6856608321287083, 0.985966280217538, 0.7420438543958908, 0.9694264035974535, 0.6665845567497861, 0.932381070330456, 0.049158717866352175, 0.7787691515858138, 0.3331868383137204, 0.05818260627284566, 0.9247147332260329, 0.25820926783433196, 0.2604653426799568, 0.8544051849561557, 0.7019691830956686]]]'
    jmsg = json.loads(msg)
    dataframe_columns1()
